=begin
#AUM Immo

#No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0

Generated by: https://github.com/swagger-api/swagger-codegen.git

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=end

require "uri"

module SwisseldexAumImmo
  class DefaultApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # Upload
    # Post a new change of contract message for automatic processing to VNB.
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :test_delivery Processes message but does not forward it to recognized VNB (for testing)
    # @option opts [String] :carbon_copy_email If VNB is consuming the message via Email, this address is taken as CC (mainly intended for testing). Adress is only considered if the mail-server supports TLS (you can check this with e.g. https://www.checktls.com/TestReceiver). Value of this parameter is not validated and it won&#39;t cause a negative impact on the processing of the message.
    # @option opts [UploadMessage] :upload_message Structure and property-names are adapted from eCH-0112 (https://www.ech.ch/de/standards/52687).
    # @return [UploadResponse]
    def upload(opts = {})
      data, _status_code, _headers = upload_with_http_info(opts)
      return data
    end

    # Upload
    # Post a new change of contract message for automatic processing to VNB.
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :test_delivery Processes message but does not forward it to recognized VNB (for testing)
    # @option opts [String] :carbon_copy_email If VNB is consuming the message via Email, this address is taken as CC (mainly intended for testing). Adress is only considered if the mail-server supports TLS (you can check this with e.g. https://www.checktls.com/TestReceiver). Value of this parameter is not validated and it won&#39;t cause a negative impact on the processing of the message.
    # @option opts [UploadMessage] :upload_message Structure and property-names are adapted from eCH-0112 (https://www.ech.ch/de/standards/52687).
    # @return [Array<(UploadResponse, Fixnum, Hash)>] UploadResponse data, response status code and response headers
    def upload_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: DefaultApi.upload ..."
      end
      # resource path
      local_var_path = "/messages".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'testDelivery'] = opts[:'test_delivery'] if !opts[:'test_delivery'].nil?
      query_params[:'carbonCopyEmail'] = opts[:'carbon_copy_email'] if !opts[:'carbon_copy_email'].nil?

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(opts[:'upload_message'])
      auth_names = ['apiKeyQuery', 'apiKeyHeader']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'UploadResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DefaultApi#upload\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
